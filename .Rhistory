color = BLUEQ(),
cor.coef = TRUE, cor.method = "pearson",
cor.coeff.args = list(method = "pearson", label.x = 1, label.sep = "\n", size = 4),
xlab = "Variação Ouvintes Mensais de Junho a Agosto", ylab = "Variação IPD de Junho a Agosto") +
labs(title = "Correlação - Variação Ouvintes Junho > Agosto (%) VS IPD Junho > Agosto (%)\n",
subtitle = "Artistas Sertanejos\n") +
tema_quaest(base_size = 12, legend_position = "bottom")
ggscatter(bd, x = "Var_Ouvintes_Junho_Agosto", y = "Var_IPD_Junho_Agosto",
shape = 21, size = 2,
add = "reg.line", conf.int = T,
add.params = list(color = GREY(), fill = "lightgray"),
color = BLUEQ(),
cor.coef = TRUE, cor.method = "pearson",
cor.coeff.args = list(method = "pearson", label.x = 1, label.sep = "\n", size = 4),
xlab = "Variação Ouvintes Mensais de Junho a Agosto", ylab = "Variação IPD de Junho a Agosto") +
labs(title = "Correlação - Variação Ouvintes Junho > Agosto (%) VS IPD Junho > Agosto (%)\n",
subtitle = "Artistas Sertanejos\n") +
tema_quaest(base_size = 12, legend_position = "bottom")
bd %>% select(Nome, Var_Ouvintes_Junho_Agosto) %>%
arrange(-Var_Ouvintes_Junho_Agosto) %>% slice(1:10) %>%
ggplot(aes(y = Var_Ouvintes_Junho_Agosto, x = reorder(Nome, Var_Ouvintes_Junho_Agosto), label = round(Var_Ouvintes_Junho_Agosto,1), fill = BLUEQ())) +
geom_col(width = 0.75, color=BLUEQ()) +
coord_flip() +
ylim(0,280) +
scale_fill_manual(values = c(BLUEQ())) +
geom_text(size = 7, hjust = -0.1, position = position_dodge(width =  1)) +
tema_quaest(base_size = 15) +
labs(y = "Aumento Percentual de Ouvintes de Junho a Agosto", x = "", title = "Artistas com maior aumento de Ouvintes de Junho a Agosto - TOP 10") +
theme(axis.text.y = element_text(size = 15)) +
theme(axis.text.x=element_blank()) + theme(axis.ticks = element_blank())
bd %>% select(Nome, Var_Ouvintes_Junho_Agosto) %>%
arrange(-Var_Ouvintes_Junho_Agosto) %>% slice(1:10) %>%
ggplot(aes(y = Var_Ouvintes_Junho_Agosto, x = reorder(Nome, Var_Ouvintes_Junho_Agosto), label = round(Var_Ouvintes_Junho_Agosto,1), fill = BLUEQ())) +
geom_col(width = 0.75, color=BLUEQ()) +
coord_flip() +
ylim(0,280) +
scale_fill_manual(values = c(BLUEQ())) +
geom_text(size = 7, hjust = -0.1, position = position_dodge(width =  1)) +
tema_quaest(base_size = 15) +
labs(y = "Aumento Percentual de Ouvintes de Junho a Agosto", x = "", title = "Artistas com maior aumento de Ouvintes de Junho a Agosto - TOP 10") +
theme(axis.text.y = element_text(size = 15)) +
theme(axis.text.x=element_blank()) + theme(axis.ticks = element_blank())
bd %>% select(Nome, Var_Ouvintes_Junho_Agosto) %>%
arrange(-Var_Ouvintes_Junho_Agosto) %>% slice(1:10) %>%
ggplot(aes(y = Var_Ouvintes_Junho_Agosto, x = reorder(Nome, Var_Ouvintes_Junho_Agosto), label = round(Var_Ouvintes_Junho_Agosto,1), fill = BLUEQ())) +
geom_col(width = 0.75, color=BLUEQ()) +
coord_flip() +
ylim(0,280) +
scale_fill_manual(values = c(BLUEQ())) +
geom_text(size = 7, hjust = -0.1, position = position_dodge(width =  1)) +
tema_quaest(base_size = 15) +
labs(y = "Aumento Percentual de Ouvintes de Junho a Agosto", x = "", title = "Artistas com maior aumento de Ouvintes de Junho a Agosto - TOP 10") +
theme(axis.text.y = element_text(size = 15)) +
theme(axis.text.x=element_blank()) + theme(axis.ticks = element_blank())
bd %>% select(Nome, Var_Ouvintes_Junho_Agosto) %>%
arrange(-Var_Ouvintes_Junho_Agosto) %>% slice(1:10) %>%
ggplot(aes(y = Var_Ouvintes_Junho_Agosto, x = reorder(Nome, Var_Ouvintes_Junho_Agosto), label = round(Var_Ouvintes_Junho_Agosto,1), fill = BLUEQ())) +
geom_col(width = 0.75, color=BLUEQ()) +
coord_flip() +
ylim(0,280) +
scale_fill_manual(values = c(BLUEQ())) +
geom_text(size = 7, hjust = -0.1, position = position_dodge(width =  1)) +
tema_quaest(base_size = 15) +
labs(y = "Aumento Percentual de Ouvintes de Junho a Agosto", x = "", title = "Artistas com maior aumento de Ouvintes de Junho a Agosto - TOP 10") +
theme(axis.text.y = element_text(size = 15)) +
theme(axis.text.x=element_blank()) + theme(axis.ticks = element_blank())
bd %>% select(Nome, Var_Ouvintes_Junho_Agosto) %>%
arrange(-Var_Ouvintes_Junho_Agosto) %>% slice(1:10) %>%
ggplot(aes(y = Var_Ouvintes_Junho_Agosto, x = reorder(Nome, Var_Ouvintes_Junho_Agosto), label = round(Var_Ouvintes_Junho_Agosto,1), fill = BLUEQ())) +
geom_col(width = 0.75, color=BLUEQ()) +
coord_flip() +
ylim(0,280) +
scale_fill_manual(values = c(BLUEQ())) +
geom_text(size = 7, hjust = -0.1, position = position_dodge(width =  1)) +
tema_quaest(base_size = 15) +
labs(y = "Aumento Percentual de Ouvintes de Junho a Agosto", x = "", title = "Artistas com maior aumento de Ouvintes de Junho a Agosto - TOP 10") +
theme(axis.text.y = element_text(size = 15)) +
theme(axis.text.x=element_blank()) + theme(axis.ticks = element_blank())
bd %>% select(Nome, Var_Ouvintes_Junho_Agosto) %>%
arrange(-Var_Ouvintes_Junho_Agosto) %>% slice(1:10) %>%
ggplot(aes(y = Var_Ouvintes_Junho_Agosto, x = reorder(Nome, Var_Ouvintes_Junho_Agosto), label = round(Var_Ouvintes_Junho_Agosto,1), fill = BLUEQ())) +
geom_col(width = 0.75, color=BLUEQ()) +
coord_flip() +
ylim(0,280) +
scale_fill_manual(values = c(BLUEQ())) +
geom_text(size = 7, hjust = -0.1, position = position_dodge(width =  1)) +
tema_quaest(base_size = 15) +
labs(y = "Aumento Percentual de Ouvintes de Junho a Agosto", x = "", title = "Artistas com maior aumento de Ouvintes de Junho a Agosto - TOP 10") +
theme(axis.text.y = element_text(size = 15)) +
theme(axis.text.x=element_blank()) + theme(axis.ticks = element_blank())
bd %>% select(Nome, Var_Ouvintes_Junho_Agosto) %>%
arrange(-Var_Ouvintes_Junho_Agosto) %>% slice(1:10) %>%
ggplot(aes(y = Var_Ouvintes_Junho_Agosto, x = reorder(Nome, Var_Ouvintes_Junho_Agosto), label = round(Var_Ouvintes_Junho_Agosto,1), fill = BLUEQ())) +
geom_col(width = 0.75, color=BLUEQ()) +
coord_flip() +
ylim(0,280) +
scale_fill_manual(values = c(BLUEQ())) +
geom_text(size = 7, hjust = -0.1, position = position_dodge(width =  1)) +
tema_quaest(base_size = 15) +
labs(y = "Aumento Percentual de Ouvintes de Junho a Agosto", x = "", title = "Artistas com maior aumento de Ouvintes de Junho a Agosto - TOP 10") +
theme(axis.text.y = element_text(size = 15)) +
theme(axis.text.x=element_blank()) + theme(axis.ticks = element_blank())
bd %>% select(Nome, IPD_Junho, IPD_Agosto) %>%
group_by(Nome, IPD_Junho) %>%
pivot_wider(names_from = Nome, values_from = IPD_Junho) %>%
mutate(CRESC = ((bd$IPD_Agosto - bd$IPD_Junho) / bd$IPD_Junho),
VALOR = ifelse(CRESC > 0, "Positivo", "Negativo")) %>%
arrange(-CRESC)  %>%
ggplot(aes(y = `CRESC`, x = reorder(bd$Nome, CRESC), label = round(`CRESC`,1), fill = VALOR)) +
geom_col(width = 0.75) +
coord_flip() +
scale_fill_manual(values = c(RED(), BLUE()),name = "") +
geom_text(size = 5, hjust = -0.15, position = position_dodge(width =  1)) +
tema_quaest(base_size = 10) +
ylim(-0.5, 0.2) +
labs(y = "Taxa de Crescimento", x = "", caption = "", title = "Taxa de crescimento",
subtitle = "") +
theme(axis.text.y = element_text(size = 10)) +
theme(axis.text.x=element_blank()) + theme(axis.ticks = element_blank())
#ERRO - Nomes ficaram em ordem alfabética e os valores ao lado das barras
#precisam ter mais casas decimais.
#Além disso, tamanho da fonte do eixo X (no caso Y pois está flipado)
#precisa ser reduzida? Única forma de encaixar todos
bd %>% select(Nome, IPD_Junho, IPD_Agosto) %>%
group_by(Nome, IPD_Junho) %>%
pivot_wider(names_from = Nome, values_from = IPD_Junho) %>%
mutate(CRESC = ((bd$IPD_Agosto - bd$IPD_Junho) / bd$IPD_Junho),
VALOR = ifelse(CRESC > 0, "Positivo", "Negativo")) %>%
arrange(-CRESC)  %>%
ggplot(aes(y = `CRESC`, x = reorder(bd$Nome, CRESC), label = round(`CRESC`,1), fill = VALOR)) +
geom_col(width = 0.75) +
coord_flip() +
scale_fill_manual(values = c(RED(), BLUE()),name = "") +
geom_text(size = 5, hjust = -0.15, position = position_dodge(width =  1)) +
tema_quaest(base_size = 10) +
ylim(-0.5, 0.2) +
labs(y = "Taxa de Crescimento", x = "", caption = "", title = "Taxa de crescimento",
subtitle = "") +
theme(axis.text.y = element_text(size = 10)) +
theme(axis.text.x=element_blank()) + theme(axis.ticks = element_blank())
bd %>% select(Nome, IPD_Agosto) %>%
arrange(-IPD_Agosto) %>% slice(1:10) %>%
ggplot(aes(y = IPD_Agosto, x = reorder(Nome, IPD_Agosto), label = round(IPD_Agosto,1), fill = BLUEQ())) +
geom_col(width = 0.75, color=BLUEQ()) +
coord_flip() +
ylim(0,100) +
scale_fill_manual(values = c(BLUEQ())) +
geom_text(size = 7, hjust = -0.1, position = position_dodge(width =  1)) +
tema_quaest(base_size = 15) +
labs(y = "IPD Agosto", x = "", title = "Artistas com maior IPD em Agosto - TOP 10") +
theme(axis.text.y = element_text(size = 15)) +
theme(axis.text.x=element_blank()) + theme(axis.ticks = element_blank())
bd %>% select(Nome, IPD_Agosto) %>%
arrange(-IPD_Agosto) %>% slice(1:10) %>%
ggplot(aes(y = IPD_Agosto, x = reorder(Nome, IPD_Agosto), label = round(IPD_Agosto,1), fill = BLUEQ())) +
geom_col(width = 0.75, color=BLUEQ()) +
coord_flip() +
ylim(0,100) +
scale_fill_manual(values = c(BLUEQ())) +
geom_text(size = 7, hjust = -0.1, position = position_dodge(width =  1)) +
tema_quaest(base_size = 15) +
labs(y = "IPD Agosto", x = "", title = "Artistas com maior IPD em Agosto - TOP 10") +
theme(axis.text.y = element_text(size = 15)) +
theme(axis.text.x=element_blank()) + theme(axis.ticks = element_blank())
bd %>% select(Nome, IPD_Agosto) %>%
arrange(-IPD_Agosto) %>% slice(1:10) %>%
ggplot(aes(y = IPD_Agosto, x = reorder(Nome, IPD_Agosto), label = round(IPD_Agosto,1), fill = BLUEQ())) +
geom_col(width = 0.75, color=BLUEQ()) +
coord_flip() +
ylim(0,100) +
scale_fill_manual(values = c(BLUEQ())) +
geom_text(size = 7, hjust = -0.1, position = position_dodge(width =  1)) +
tema_quaest(base_size = 15) +
labs(y = "IPD Agosto", x = "", title = "Artistas com maior IPD em Agosto - TOP 10") +
theme(axis.text.y = element_text(size = 15)) +
theme(axis.text.x=element_blank()) + theme(axis.ticks = element_blank())
bd %>% select(Nome, IPD_Agosto) %>%
arrange(-IPD_Agosto) %>% slice(1:10) %>%
ggplot(aes(y = IPD_Agosto, x = reorder(Nome, IPD_Agosto), label = round(IPD_Agosto,1), fill = BLUEQ())) +
geom_col(width = 0.75, color=BLUEQ()) +
coord_flip() +
ylim(0,100) +
scale_fill_manual(values = c(BLUEQ())) +
geom_text(size = 7, hjust = -0.1, position = position_dodge(width =  1)) +
tema_quaest(base_size = 15) +
labs(y = "IPD Agosto", x = "", title = "Artistas com maior IPD em Agosto - TOP 10") +
theme(axis.text.y = element_text(size = 15)) +
theme(axis.text.x=element_blank()) + theme(axis.ticks = element_blank())
bd %>% select(Nome, IPD_Agosto) %>%
arrange(-IPD_Agosto) %>% slice(1:10) %>%
ggplot(aes(y = IPD_Agosto, x = reorder(Nome, IPD_Agosto), label = round(IPD_Agosto,1), fill = BLUEQ())) +
geom_col(width = 0.75, color=BLUEQ()) +
coord_flip() +
ylim(0,100) +
scale_fill_manual(values = c(BLUEQ())) +
geom_text(size = 7, hjust = -0.1, position = position_dodge(width =  1)) +
tema_quaest(base_size = 15) +
labs(y = "IPD Agosto", x = "", title = "Artistas com maior IPD em Agosto - TOP 10") +
theme(axis.text.y = element_text(size = 15)) +
theme(axis.text.x=element_blank()) + theme(axis.ticks = element_blank())
bd %>% select(Nome, Ouvintes_Agosto) %>%
arrange(-Ouvintes_Agosto) %>% slice(1:10) %>%
ggplot(aes(y = Ouvintes_Agosto, x = reorder(Nome, Ouvintes_Agosto), label = round(Ouvintes_Agosto,1), fill = BLUEQ())) +
geom_col(width = 0.75, color=BLUEQ()) +
coord_flip() +
ylim(0,10000000) +
scale_fill_manual(values = c(BLUEQ())) +
geom_text(size = 7, hjust = -0.1, position = position_dodge(width =  1)) +
tema_quaest(base_size = 15) +
labs(y = "IPD Agosto", x = "", title = "Artistas com mais Ouvintes em Agosto - TOP 10") +
theme(axis.text.y = element_text(size = 15)) +
theme(axis.text.x=element_blank()) + theme(axis.ticks = element_blank())
# T
```{r mais_ouvintes_agosto, fig.height= 5, fig.width=9.8}
bd %>% select(Nome, Ouvintes_Agosto) %>%
arrange(-Ouvintes_Agosto) %>% slice(1:10) %>%
ggplot(aes(y = Ouvintes_Agosto, x = reorder(Nome, Ouvintes_Agosto), label = round(Ouvintes_Agosto,1), fill = BLUEQ())) +
geom_col(width = 0.75, color=BLUEQ()) +
coord_flip() +
ylim(0,10000000) +
scale_fill_manual(values = c(BLUEQ())) +
geom_text(size = 7, hjust = -0.1, position = position_dodge(width =  1)) +
tema_quaest(base_size = 15) +
labs(y = "IPD Agosto", x = "", title = "Artistas com mais Ouvintes em Agosto - TOP 10") +
theme(axis.text.y = element_text(size = 15)) +
theme(axis.text.x=element_blank()) + theme(axis.ticks = element_blank())
bd %>% select(Nome, Ouvintes_Agosto) %>%
arrange(-Ouvintes_Agosto) %>% slice(1:10) %>%
ggplot(aes(y = Ouvintes_Agosto, x = reorder(Nome, Ouvintes_Agosto), label = round(Ouvintes_Agosto,1), fill = BLUEQ())) +
geom_col(width = 0.75, color=BLUEQ()) +
coord_flip() +
ylim(0,10000000) +
scale_fill_manual(values = c(BLUEQ())) +
geom_text(size = 7, hjust = -0.1, position = position_dodge(width =  1)) +
tema_quaest(base_size = 15) +
labs(y = "IPD Agosto", x = "", title = "Artistas com mais Ouvintes em Agosto - TOP 10") +
theme(axis.text.y = element_text(size = 15)) +
theme(axis.text.x=element_blank()) + theme(axis.ticks = element_blank())
bd %>% select(Nome, Ouvintes_Agosto) %>%
arrange(-Ouvintes_Agosto) %>% slice(1:10) %>%
ggplot(aes(y = Ouvintes_Agosto, x = reorder(Nome, Ouvintes_Agosto), label = round(Ouvintes_Agosto,1), fill = BLUEQ())) +
geom_col(width = 0.75, color=BLUEQ()) +
coord_flip() +
ylim(0,10000000) +
scale_fill_manual(values = c(BLUEQ())) +
geom_text(size = 7, hjust = -0.1, position = position_dodge(width =  1)) +
tema_quaest(base_size = 15) +
labs(y = "IPD Agosto", x = "", title = "Artistas com mais Ouvintes em Agosto - TOP 10") +
theme(axis.text.y = element_text(size = 15)) +
theme(axis.text.x=element_blank()) + theme(axis.ticks = element_blank())
bd %>% select(Nome, Ouvintes_Agosto) %>%
arrange(-Ouvintes_Agosto) %>% slice(1:10) %>%
ggplot(aes(y = Ouvintes_Agosto, x = reorder(Nome, Ouvintes_Agosto), label = round(Ouvintes_Agosto,1), fill = BLUEQ())) +
geom_col(width = 0.75, color=BLUEQ()) +
coord_flip() +
ylim(0,10000000) +
scale_fill_manual(values = c(BLUEQ())) +
geom_text(size = 7, hjust = -0.1, position = position_dodge(width =  1)) +
tema_quaest(base_size = 15) +
labs(y = "IPD Agosto", x = "", title = "Artistas com mais Ouvintes em Agosto - TOP 10") +
theme(axis.text.y = element_text(size = 15)) +
theme(axis.text.x=element_blank()) + theme(axis.ticks = element_blank())
bd %>% select(Nome, Ouvintes_Agosto) %>%
arrange(-Ouvintes_Agosto) %>% slice(1:10) %>%
ggplot(aes(y = Ouvintes_Agosto, x = reorder(Nome, Ouvintes_Agosto), label = round(Ouvintes_Agosto,1), fill = BLUEQ())) +
geom_col(width = 0.75, color=BLUEQ()) +
coord_flip() +
ylim(0,10000000) +
scale_fill_manual(values = c(BLUEQ())) +
geom_text(size = 7, hjust = -0.1, position = position_dodge(width =  1)) +
tema_quaest(base_size = 15) +
labs(y = "IPD Agosto", x = "", title = "Artistas com mais Ouvintes em Agosto - TOP 10") +
theme(axis.text.y = element_text(size = 15)) +
theme(axis.text.x=element_blank()) + theme(axis.ticks = element_blank())
bd %>% select(Nome, Ouvintes_Agosto) %>%
arrange(-Ouvintes_Agosto) %>% slice(1:10) %>%
ggplot(aes(y = Ouvintes_Agosto, x = reorder(Nome, Ouvintes_Agosto), label = round(Ouvintes_Agosto,1), fill = BLUEQ())) +
geom_col(width = 0.75, color=BLUEQ()) +
coord_flip() +
ylim(0,10000000) +
scale_fill_manual(values = c(BLUEQ())) +
geom_text(size = 7, hjust = -0.1, position = position_dodge(width =  1)) +
tema_quaest(base_size = 15) +
labs(y = "IPD Agosto", x = "", title = "Artistas com mais Ouvintes em Agosto - TOP 10") +
theme(axis.text.y = element_text(size = 15)) +
theme(axis.text.x=element_blank()) + theme(axis.ticks = element_blank())
bd %>% select(Nome, Ouvintes_Agosto) %>%
arrange(-Ouvintes_Agosto) %>% slice(1:10) %>%
ggplot(aes(y = Ouvintes_Agosto, x = reorder(Nome, Ouvintes_Agosto), label = round(Ouvintes_Agosto,1), fill = BLUEQ())) +
geom_col(width = 0.75, color=BLUEQ()) +
coord_flip() +
ylim(10000,10000000) +
scale_fill_manual(values = c(BLUEQ())) +
geom_text(size = 7, hjust = -0.1, position = position_dodge(width =  1)) +
tema_quaest(base_size = 15) +
labs(y = "IPD Agosto", x = "", title = "Artistas com mais Ouvintes em Agosto - TOP 10") +
theme(axis.text.y = element_text(size = 15)) +
theme(axis.text.x=element_blank()) + theme(axis.ticks = element_blank())
bd %>% select(Nome, Ouvintes_Agosto) %>%
arrange(-Ouvintes_Agosto) %>% slice(1:10) %>%
ggplot(aes(y = Ouvintes_Agosto, x = reorder(Nome, Ouvintes_Agosto), label = round(Ouvintes_Agosto,1), fill = BLUEQ())) +
geom_col(width = 0.75, color=BLUEQ()) +
coord_flip() +
ylim(0,10000000) +
scale_fill_manual(values = c(BLUEQ())) +
geom_text(size = 7, hjust = -0.1, position = position_dodge(width =  1)) +
tema_quaest(base_size = 15) +
labs(y = "IPD Agosto", x = "", title = "Artistas com mais Ouvintes em Agosto - TOP 10") +
theme(axis.text.y = element_text(size = 15)) +
theme(axis.text.x=element_blank()) + theme(axis.ticks = element_blank())
install.packages("icon")
library(icon)
# ---
# TEMPLATE DE RELATORIO DO QUAEST
# ---
# ---
#
# MODO DE USAR
#
# 1) Nas linhas abaixo, altere as informacoes pedidas em cada objeto -- elas serao
# usadas para atualizar os campos dinamicos do relatorio.
#
# 2) Para criar um novo slide, use:
#
# ---
# # T
#
#
# 3) Para compilar, use:
#
# rmarkdown::render("template.Rmd", output_file = "relatorio.html")
#
# 4) Para produzir as versoes em HTML e PDF ao mesmo tempo, use:
#
# pagedown::
#
# ---
# CAMPOS PARA ATUALIZAR --------------------------------------------------------
library(quaestreports)
titulo_relatorio <- "Análise IPD + Ouvintes Mensais - Sertanejos"
# Pacotes ----------------------------------------------------------------------
library(quaestplots)
library(fontawesome)
library(tidyverse)
library(showtext)
library(svglite)
library(tidyverse)
library(here)
library(ggrepel)
library(readxl)
library(foreign)
library(wordcloud)
library(lubridate)
library(rio)
library("ggpubr")
# Opcoes do rmarkdown ----------------------------------------------------------
knitr::opts_chunk$set(
echo = FALSE,
message = FALSE,
warning = FALSE,
dev = "svglite",
fig.ext = ".svg",
fig.height = 1.8,
fig.width = 3.5,
fig.align = "center",
fig.showtext = TRUE
)
# Xaringan ---------------------------------------------------------------------
options(htmltools.dir.version = FALSE)
# Customizacao para os graficos ------------------------------------------------
font_add_google("Montserrat", "Montserrat")
showtext_auto()
base_family <- "Montserrat"
base_size <- 4.5
label_size <- 1.6
hjust = -0.08
## Análise
ouvintes_mensais_spotify_sertanejo <- read_excel("C:/Users/artur/OneDrive/Área de Trabalho/Quaest/IPD Ranking Sertanejo (Music)/0.dados/ouvintes_mensais_spotify_sertanejo.xlsx")
bd <- ouvintes_mensais_spotify_sertanejo
colnames(bd)<- c("Nome", "Var_Ouvintes_Julho_Agosto", "Var_IPD_Julho_Agosto",
"Var_Ouvintes_Junho_Julho", "Var_IPD_Junho_Julho", "Var_Ouvintes_Junho_Agosto",
"Var_IPD_Junho_Agosto",
"Ouvintes_Agosto", "IPD_Agosto", "PD_Agosto","FAMA_Agosto",
"ENGAJ_Agosto", "VAL_Agosto", "MOB_Agosto",
"Ouvintes_Julho", "IPD_Julho", "PD_Julho","FAMA_Julho",
"ENGAJ_Julho", "VAL_Julho", "MOB_Julho",
"Ouvintes_Junho", "IPD_Junho", "PD_Junho","FAMA_Junho",
"ENGAJ_Junho", "VAL_Junho", "MOB_Junho")
bd$Var_Ouvintes_Julho_Agosto <- bd$Var_Ouvintes_Julho_Agosto *100
bd$Var_IPD_Julho_Agosto <- bd$Var_IPD_Julho_Agosto *100
bd$Var_Ouvintes_Junho_Julho <- bd$Var_Ouvintes_Junho_Julho *100
bd$Var_IPD_Junho_Julho <- bd$Var_IPD_Junho_Julho *100
bd$Var_Ouvintes_Junho_Agosto <- bd$Var_Ouvintes_Junho_Agosto *100
bd$Var_IPD_Junho_Agosto <- bd$Var_IPD_Junho_Agosto *100
#ERRO - Nomes ficaram em ordem alfabética e os valores ao lado das barras
#precisam ter mais casas decimais.
#Além disso, tamanho da fonte do eixo X (no caso Y pois está flipado)
#precisa ser reduzida? Única forma de encaixar todos
bd %>% select(Nome, IPD_Junho, IPD_Agosto) %>%
group_by(Nome, IPD_Junho) %>%
pivot_wider(names_from = Nome, values_from = IPD_Junho) %>%
mutate(CRESC = ((bd$IPD_Agosto - bd$IPD_Junho) / bd$IPD_Junho),
VALOR = ifelse(CRESC > 0, "Positivo", "Negativo")) %>%
arrange(-CRESC)  %>%
ggplot(aes(y = `CRESC`, x = reorder(bd$Nome, CRESC), label = round(`CRESC`,1), fill = VALOR)) +
geom_col(width = 0.75) +
coord_flip() +
scale_fill_manual(values = c(RED(), BLUE()),name = "") +
geom_text(size = 5, hjust = -0.15, position = position_dodge(width =  1)) +
tema_quaest(base_size = 10) +
ylim(-0.5, 0.2) +
labs(y = "Taxa de Crescimento", x = "", caption = "", title = "Taxa de crescimento",
subtitle = "") +
theme(axis.text.y = element_text(size = 10)) +
theme(axis.text.x=element_blank()) + theme(axis.ticks = element_blank())
library(quaestreports)
library(tidyverse)
library(dplyr)
library(here)
library(writexl)
library(readxl)
library(tokenizers)
library(ggplot2)
library(rio)
library(quaestplots)
library(openxlsx)
##### Análise Camilo Santana ########################################################
# Abrir posts
bd_camilo <- read_xlsx(here("0.dados/govs/camilo/camilo.xlsx"))
# Padronizar posts
bd_camilo$Message <- str_to_lower(bd_camilo$Message)
rm(bd_camilo)
########## PLOTS #######################################
# Abrindo resultado geral
bd <- import_list("palavras_agregado.xlsx")
bd <- import_list("1.analise/Relatorio/palavras.agregado.xlsx")
bd <- import_list(here("1.analise/Relatorio/palavras.agregado.xlsx"))
bd <- import_list(here("1.analise/Relatorio/palavras_agregado.xlsx"))
bd <- import_list(here("1.analise/Relatorio/palavras_agregado.xlsx")
)
bd <- import_list("1.analise/Relatorio/palavras_agregado.xlsx")
# Abrindo top 10 de cada cand
camilo <- head(bd$Camilo, n = 10)
claudio <- head(bd$`Claudio Castro`, n = 10)
dino <- head(bd$`Flávio Dino`, n = 10)
leite <- head(bd$`Eduardo Leite`, n = 10)
doria <- head(bd$`João Doria`, n = 10)
zema <- head(bd$`Romeu Zema`, n = 10)
# Criação da Função de Plot
plot_cand <- function(cand, titulo) {
ggplot(cand) +
aes(x = reorder(Palavras, Freq), y = Freq) +
geom_bar(stat = "identity", fill = "#10ACB8", width = 0.8) +
geom_text(aes(label=Freq), color = "white", vjust = 0.4, hjust = 1.3, size = 4.5) +
ggtitle(titulo) +
xlab("Palavras \n") +
ylab("Frequência") +
labs(caption = "Fonte: Quaest Consultoria \n") +
coord_flip() +
tema_quaest_web() +
theme(axis.text.x = element_blank(),
axis.text.y = element_text(size = 13, hjust = 1),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.title = element_text(face = "bold", size = 16, vjust = -0.8),
plot.caption = element_text(size = 10, face = "bold"))
}
# Aplicando função para cada Cand
plot_camilo <- plot_cand(camilo, "Top-10 palavras mais utilizadas por Camilo Santana no ano de 2021 \n")
plot_claudio <- plot_cand(claudio, "Top-10 palavras mais utilizadas por Cláudio Castro no ano de 2021 \n")
plot_dino <- plot_cand(dino, "Top-10 palavras mais utilizadas por Fávio Dino no ano de 2021 \n")
plot_leite <- plot_cand(leite, "Top-10 palavras mais utilizadas por Eduardo Leite no ano de 2021 \n")
plot_doria <- plot_cand(doria, "Top-10 palavras mais utilizadas por João Doria no ano de 2021 \n")
plot_zema <- plot_cand(zema, "Top-10 palavras mais utilizadas por Romeu Zema no ano de 2021 \n")
# Criação Grid
library(gridExtra)
library(grid)
# Função de gráficos para grid
plot_grid <- function(cand, titulo) {
ggplot(cand) +
aes(x = reorder(Palavras, Freq), y = Freq) +
geom_bar(stat = "identity", fill = "#10ACB8", width = 0.8) +
geom_text(aes(label=Freq), color = "white", vjust = 0.4, hjust = 1.3, size = 3.8) +
ggtitle(titulo) +
xlab("Palavras \n") +
ylab("Frequência") +
coord_flip() +
tema_quaest_web() +
theme(axis.text.x = element_blank(),
axis.text.y = element_text(size = 13, hjust = 1),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.title = element_text(face = "bold", size = 18, vjust = 1, hjust = 0.1),
plot.caption = element_text(size = 10, face = "bold"))
}
# Formatação gráficos individuais
plot_camilo2 <- plot_grid(camilo, "Camilo Santana")
plot_claudio2 <- plot_grid(claudio, "Cláudio Castro")
plot_dino2 <- plot_grid(dino, "Fávio Dino")
plot_leite2 <- plot_grid(leite, "Eduardo Leite")
plot_doria2 <- plot_grid(doria, "João Doria")
plot_zema2 <- plot_grid(zema, "Romeu Zema")
grid_cands <- grid.arrange(plot_camilo2, plot_claudio2, plot_leite2, plot_dino2, plot_doria2, plot_zema2,
ncol = 3, bottom = textGrob("Fonte: Quaest Consultoria \n",
just = "right",
x = 1,
gp = gpar(fontface = "bold", fontsize = 10)
))
grid.arrange(plot_camilo2, plot_claudio2, plot_leite2, plot_dino2, plot_doria2, plot_zema2,
ncol = 3)
grid_cands <- grid.arrange(plot_camilo2, plot_claudio2, plot_leite2, plot_dino2, plot_doria2, plot_zema2,
ncol = 3)
